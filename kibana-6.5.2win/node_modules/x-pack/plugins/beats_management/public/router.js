"use strict";
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License;
 * you may not use this file except in compliance with the Elastic License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const react_1 = tslib_1.__importDefault(require("react"));
const react_router_dom_1 = require("react-router-dom");
const header_1 = require("./components/layouts/header");
const route_with_breadcrumb_1 = require("./components/route_with_breadcrumb");
const beat_1 = require("./pages/beat");
const enforce_security_1 = require("./pages/enforce_security");
const invalid_license_1 = require("./pages/invalid_license");
const main_1 = require("./pages/main");
const no_access_1 = require("./pages/no_access");
const tag_1 = require("./pages/tag");
exports.PageRouter = ({ libs }) => {
    return (react_1.default.createElement(react_router_dom_1.HashRouter, { basename: "/management/beats_management" },
        react_1.default.createElement("div", null,
            react_1.default.createElement(route_with_breadcrumb_1.BreadcrumbConsumer, null, ({ breadcrumbs }) => (react_1.default.createElement(header_1.Header, { breadcrumbs: [
                    {
                        href: '#/management',
                        text: 'Management',
                    },
                    {
                        href: '#/management/beats_management',
                        text: 'Beats',
                    },
                    ...breadcrumbs,
                ] }))),
            react_1.default.createElement(react_router_dom_1.Switch, null,
                libs.framework.licenseExpired() && react_1.default.createElement(react_router_dom_1.Route, { render: () => react_1.default.createElement(invalid_license_1.InvalidLicensePage, null) }),
                !libs.framework.securityEnabled() && react_1.default.createElement(react_router_dom_1.Route, { render: () => react_1.default.createElement(enforce_security_1.EnforceSecurityPage, null) }),
                !libs.framework.getCurrentUser() ||
                    (!libs.framework.getCurrentUser().roles.includes('beats_admin') &&
                        !libs.framework
                            .getDefaultUserRoles()
                            .some(r => libs.framework.getCurrentUser().roles.includes(r)) && (react_1.default.createElement(react_router_dom_1.Route, { render: () => react_1.default.createElement(no_access_1.NoAccessPage, null) }))),
                react_1.default.createElement(react_router_dom_1.Route, { path: "/", exact: true, render: () => react_1.default.createElement(react_router_dom_1.Redirect, { from: "/", exact: true, to: "/overview/beats" }) }),
                react_1.default.createElement(react_router_dom_1.Route, { path: "/overview", render: (props) => react_1.default.createElement(main_1.MainPages, Object.assign({}, props, { libs: libs })) }),
                react_1.default.createElement(route_with_breadcrumb_1.RouteWithBreadcrumb, { title: params => {
                        return `Beats: ${params.beatId}`;
                    }, parentBreadcrumbs: [
                        {
                            text: 'Beats List',
                            href: '#/management/beats_management/overview/beats',
                        },
                    ], path: "/beat/:beatId", render: (props) => react_1.default.createElement(beat_1.BeatDetailsPage, Object.assign({}, props, { libs: libs })) }),
                react_1.default.createElement(route_with_breadcrumb_1.RouteWithBreadcrumb, { title: params => {
                        if (params.action === 'create') {
                            return 'Create Tag';
                        }
                        return `Tag: ${params.tagid}`;
                    }, parentBreadcrumbs: [
                        {
                            text: 'Tags List',
                            href: '#/management/beats_management/overview/tags',
                        },
                    ], path: "/tag/:action/:tagid?", render: (props) => react_1.default.createElement(tag_1.TagPage, Object.assign({}, props, { libs: libs })) })))));
};
