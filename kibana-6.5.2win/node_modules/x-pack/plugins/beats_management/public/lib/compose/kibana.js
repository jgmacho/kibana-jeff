"use strict";
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License;
 * you may not use this file except in compliance with the Elastic License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
// @ts-ignore
const xpack_info_1 = require("plugins/xpack_main/services/xpack_info");
// @ts-ignore
require("ui/autoload/all");
// @ts-ignore: path dynamic for kibana
const chrome_1 = tslib_1.__importDefault(require("ui/chrome"));
// @ts-ignore: path dynamic for kibana
const management_1 = require("ui/management");
// @ts-ignore: path dynamic for kibana
const modules_1 = require("ui/modules");
// @ts-ignore: path dynamic for kibana
const routes_1 = tslib_1.__importDefault(require("ui/routes"));
const index_names_1 = require("../../../common/constants/index_names");
const config_schemas_1 = require("../../config_schemas");
const rest_beats_adapter_1 = require("../adapters/beats/rest_beats_adapter");
const rest_1 = require("../adapters/elasticsearch/rest");
const kibana_framework_adapter_1 = require("../adapters/framework/kibana_framework_adapter");
const axios_rest_api_adapter_1 = require("../adapters/rest_api/axios_rest_api_adapter");
const rest_tags_adapter_1 = require("../adapters/tags/rest_tags_adapter");
const rest_tokens_adapter_1 = require("../adapters/tokens/rest_tokens_adapter");
const beats_1 = require("../beats");
const elasticsearch_1 = require("../elasticsearch");
const tags_1 = require("../tags");
function compose() {
    const api = new axios_rest_api_adapter_1.AxiosRestAPIAdapter(chrome_1.default.getXsrfToken(), chrome_1.default.getBasePath());
    const esAdapter = new rest_1.RestElasticsearchAdapter(api, index_names_1.INDEX_NAMES.BEATS);
    const tags = new tags_1.TagsLib(new rest_tags_adapter_1.RestTagsAdapter(api), config_schemas_1.supportedConfigs);
    const tokens = new rest_tokens_adapter_1.RestTokensAdapter(api);
    const beats = new beats_1.BeatsLib(new rest_beats_adapter_1.RestBeatsAdapter(api), {
        tags,
    });
    const domainLibs = {
        tags,
        tokens,
        beats,
    };
    const pluginUIModule = modules_1.uiModules.get('app/beats_management');
    const framework = new kibana_framework_adapter_1.KibanaFrameworkAdapter(pluginUIModule, management_1.management, routes_1.default, chrome_1.default, xpack_info_1.XPackInfoProvider);
    const libs = {
        framework,
        elasticsearch: new elasticsearch_1.ElasticsearchLib(esAdapter),
        ...domainLibs,
    };
    return libs;
}
exports.compose = compose;
