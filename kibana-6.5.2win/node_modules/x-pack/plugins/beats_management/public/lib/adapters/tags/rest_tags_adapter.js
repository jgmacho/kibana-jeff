"use strict";
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License;
 * you may not use this file except in compliance with the Elastic License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
class RestTagsAdapter {
    constructor(REST) {
        this.REST = REST;
    }
    async getTagsWithIds(tagIds) {
        const tags = await this.REST.get(`/api/beats/tags/${tagIds.join(',')}`);
        return tags;
    }
    async getAll() {
        return await this.REST.get(`/api/beats/tags`);
    }
    async delete(tagIds) {
        return (await this.REST.delete(`/api/beats/tags/${tagIds.join(',')}`))
            .success;
    }
    async upsertTag(tag) {
        const response = await this.REST.put(`/api/beats/tag/${tag.id}`, {
            color: tag.color,
            configuration_blocks: tag.configuration_blocks,
        });
        return response.success ? tag : null;
    }
}
exports.RestTagsAdapter = RestTagsAdapter;
