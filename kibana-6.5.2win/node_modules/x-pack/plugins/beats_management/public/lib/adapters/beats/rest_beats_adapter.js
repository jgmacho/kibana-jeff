"use strict";
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License;
 * you may not use this file except in compliance with the Elastic License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
class RestBeatsAdapter {
    constructor(REST) {
        this.REST = REST;
    }
    async get(id) {
        return await this.REST.get(`/api/beats/agent/${id}`);
    }
    async getBeatWithToken(enrollmentToken) {
        const beat = await this.REST.get(`/api/beats/agent/unknown/${enrollmentToken}`);
        return beat;
    }
    async getAll(ESQuery) {
        return (await this.REST.get('/api/beats/agents/all', { ESQuery })).beats;
    }
    async getBeatsWithTag(tagId) {
        return (await this.REST.get(`/api/beats/agents/tag/${tagId}`)).beats;
    }
    async update(id, beatData) {
        await this.REST.put(`/api/beats/agent/${id}`, beatData);
        return true;
    }
    async removeTagsFromBeats(removals) {
        return (await this.REST.post(`/api/beats/agents_tags/removals`, {
            removals,
        })).removals;
    }
    async assignTagsToBeats(assignments) {
        return (await this.REST.post(`/api/beats/agents_tags/assignments`, {
            assignments,
        })).assignments;
    }
}
exports.RestBeatsAdapter = RestBeatsAdapter;
