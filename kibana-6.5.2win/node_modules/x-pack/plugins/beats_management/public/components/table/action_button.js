"use strict";
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License;
 * you may not use this file except in compliance with the Elastic License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const eui_1 = require("@elastic/eui");
const react_1 = tslib_1.__importDefault(require("react"));
function ActionButton(props) {
    const { actions, actionHandler, hidePopover, isPopoverVisible, showPopover } = props;
    if (actions.length === 0) {
        return null;
    }
    return (react_1.default.createElement(eui_1.EuiPopover, { anchorPosition: "downLeft", button: react_1.default.createElement(eui_1.EuiButton, { iconSide: "right", iconType: "arrowDown", onClick: showPopover }, "Bulk Action"), closePopover: hidePopover, id: "contextMenu", isOpen: isPopoverVisible, panelPaddingSize: "none", withTitle: true },
        react_1.default.createElement(eui_1.EuiContextMenu, { initialPanelId: 0, panels: [
                {
                    id: 0,
                    title: `Manage ${props.itemName}`,
                    items: actions.map(action => ({
                        ...action,
                        onClick: () => actionHandler(action.action),
                    })),
                },
            ] })));
}
exports.ActionButton = ActionButton;
