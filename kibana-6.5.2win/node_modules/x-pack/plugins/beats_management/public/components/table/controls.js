"use strict";
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License;
 * you may not use this file except in compliance with the Elastic License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const eui_1 = require("@elastic/eui");
const react_1 = tslib_1.__importDefault(require("react"));
const index_1 = require("../autocomplete_field/index");
const table_controls_1 = require("../table_controls");
function ControlBar(props) {
    const { assignmentOptions: { actionHandler, items, schema, type }, kueryBarProps, selectionCount, } = props;
    if (type === 'none') {
        return null;
    }
    return (react_1.default.createElement(eui_1.EuiFlexGroup, { alignItems: "center", justifyContent: "spaceBetween" },
        react_1.default.createElement(eui_1.EuiFlexItem, { grow: false },
            react_1.default.createElement(table_controls_1.OptionControl, { itemType: props.itemType, schema: schema, selectionCount: selectionCount, actionHandler: actionHandler, items: items })),
        kueryBarProps && (react_1.default.createElement(eui_1.EuiFlexItem, null,
            react_1.default.createElement(index_1.AutocompleteField, Object.assign({}, kueryBarProps, { placeholder: "Filter results" }))))));
}
exports.ControlBar = ControlBar;
