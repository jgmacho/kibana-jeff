"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License;
 * you may not use this file except in compliance with the Elastic License.
 */
const react_1 = tslib_1.__importStar(require("react"));
const react_router_dom_1 = require("react-router-dom");
const consumer_1 = require("./consumer");
class WrappedRouteWithBreadcrumb extends react_1.Component {
    componentWillUnmount() {
        const { text, href, context } = this.props;
        context.removeCrumb({
            text,
            href,
        });
    }
    componentDidMount() {
        const { text, href, parents, context } = this.props;
        context.addCrumb({
            text,
            href,
        }, parents);
    }
    render() {
        return this.props.children;
    }
}
exports.RouteWithBreadcrumb = ({ title, render, component: RouteComponent, parentBreadcrumbs, ...props }) => (react_1.default.createElement(react_router_dom_1.Route, Object.assign({}, props, { render: renderProps => {
        return (react_1.default.createElement(consumer_1.BreadcrumbConsumer, null, context => (react_1.default.createElement(WrappedRouteWithBreadcrumb, { parents: parentBreadcrumbs, href: props.path, text: typeof title === 'function' ? title(renderProps.match.params) : title, context: context },
            render && render(renderProps),
            RouteComponent && react_1.default.createElement(RouteComponent, Object.assign({}, renderProps))))));
    } })));
