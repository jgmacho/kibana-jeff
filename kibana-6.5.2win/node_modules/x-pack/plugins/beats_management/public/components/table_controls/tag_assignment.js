"use strict";
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License;
 * you may not use this file except in compliance with the Elastic License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const eui_1 = require("@elastic/eui");
const react_1 = tslib_1.__importDefault(require("react"));
const constants_1 = require("../../../common/constants");
const tag_badge_1 = require("../tag/tag_badge");
class TagAssignment extends react_1.default.PureComponent {
    constructor(props) {
        super(props);
        this.state = {
            isFetchingTags: false,
        };
    }
    render() {
        const { assignTag, tag, tag: { id }, } = this.props;
        return (react_1.default.createElement(eui_1.EuiFlexGroup, { gutterSize: "xs", key: id },
            this.state.isFetchingTags && (react_1.default.createElement(eui_1.EuiFlexItem, null,
                react_1.default.createElement(eui_1.EuiLoadingSpinner, { size: "m" }))),
            react_1.default.createElement(eui_1.EuiFlexItem, null,
                react_1.default.createElement(tag_badge_1.TagBadge, { maxIdRenderSize: constants_1.TABLE_CONFIG.TRUNCATE_TAG_LENGTH_SMALL, onClick: () => assignTag(id), onClickAriaLabel: id, tag: tag }))));
    }
}
exports.TagAssignment = TagAssignment;
