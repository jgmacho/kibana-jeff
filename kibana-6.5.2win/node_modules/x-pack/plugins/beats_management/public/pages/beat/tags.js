"use strict";
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License;
 * you may not use this file except in compliance with the Elastic License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const eui_1 = require("@elastic/eui");
const react_1 = tslib_1.__importDefault(require("react"));
const table_1 = require("../../components/table");
class BeatTagsPage extends react_1.default.PureComponent {
    constructor(props) {
        super(props);
        this.tableRef = react_1.default.createRef();
        this.getBeat = async () => {
            try {
                const beat = await this.props.libs.beats.get(this.props.beatId);
                this.setState({ beat });
            }
            catch (e) {
                throw new Error(e);
            }
        };
        this.state = {
            beat: null,
            notifications: [],
        };
    }
    async componentWillMount() {
        await this.getBeat();
    }
    render() {
        const { beat } = this.state;
        return (react_1.default.createElement("div", null,
            react_1.default.createElement(table_1.Table, { hideTableControls: true, items: beat ? beat.full_tags : [], ref: this.tableRef, type: table_1.BeatDetailTagsTable }),
            react_1.default.createElement(eui_1.EuiGlobalToastList, { toasts: this.state.notifications, dismissToast: () => this.setState({ notifications: [] }), toastLifeTimeMs: 5000 })));
    }
}
exports.BeatTagsPage = BeatTagsPage;
