"use strict";
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License;
 * you may not use this file except in compliance with the Elastic License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const eui_1 = require("@elastic/eui");
const eui_2 = require("@elastic/eui");
const react_1 = tslib_1.__importDefault(require("react"));
const react_router_dom_1 = require("react-router-dom");
const connected_link_1 = require("../../components/connected_link");
const no_data_1 = require("../../components/layouts/no_data");
const primary_1 = require("../../components/layouts/primary");
const walkthrough_1 = require("../../components/layouts/walkthrough");
const route_with_breadcrumb_1 = require("../../components/route_with_breadcrumb");
const with_url_state_1 = require("../../containers/with_url_state");
const activity_1 = require("./activity");
const beats_1 = require("./beats");
const create_tag_fragment_1 = require("./create_tag_fragment");
const enroll_fragment_1 = require("./enroll_fragment");
const finish_walkthrough_1 = require("./finish_walkthrough");
const tags_1 = require("./tags");
class MainPagesComponent extends react_1.default.PureComponent {
    constructor(props) {
        super(props);
        this.mounted = false;
        this.onSelectedTabChanged = (id) => {
            this.props.goTo(id);
        };
        this.loadBeats = async () => {
            let query;
            if (this.props.urlState.beatsKBar) {
                query = await this.props.libs.elasticsearch.convertKueryToEsQuery(this.props.urlState.beatsKBar);
            }
            let beats;
            let unfilteredBeats;
            try {
                [beats, unfilteredBeats] = await Promise.all([
                    this.props.libs.beats.getAll(query),
                    this.props.libs.beats.getAll(),
                ]);
            }
            catch (e) {
                beats = [];
                unfilteredBeats = [];
            }
            if (this.mounted) {
                this.setState({
                    loadedBeatsAtLeastOnce: true,
                    beats,
                    unfilteredBeats,
                });
            }
        };
        this.state = {
            loadedBeatsAtLeastOnce: false,
            beats: [],
            unfilteredBeats: [],
        };
    }
    componentDidMount() {
        this.mounted = true;
        this.loadBeats();
    }
    componentWillUnmount() {
        this.mounted = false;
    }
    render() {
        if (this.state.loadedBeatsAtLeastOnce &&
            this.state.unfilteredBeats.length === 0 &&
            !this.props.location.pathname.includes('/overview/initial')) {
            return react_1.default.createElement(react_router_dom_1.Redirect, { to: "/overview/initial/help" });
        }
        const tabs = [
            {
                id: '/overview/beats',
                name: 'Enrolled Beats',
                disabled: false,
            },
            // {
            //   id: '/overview/activity',
            //   name: 'Beats Activity',
            //   disabled: false,
            // },
            {
                id: '/overview/tags',
                name: 'Configuration tags',
                disabled: false,
            },
        ];
        const walkthroughSteps = [
            {
                id: '/overview/initial/beats',
                name: 'Enroll Beat',
                disabled: false,
                page: enroll_fragment_1.EnrollBeatPage,
            },
            {
                id: '/overview/initial/tag',
                name: 'Create tag',
                disabled: false,
                page: create_tag_fragment_1.CreateTagPageFragment,
            },
            {
                id: '/overview/initial/finish',
                name: 'finish',
                disabled: false,
                page: finish_walkthrough_1.FinishWalkthroughPage,
            },
        ];
        if (this.props.location.pathname === '/overview/initial/help') {
            return (react_1.default.createElement(no_data_1.NoDataLayout, { title: "Beats central management (Beta)", actionSection: react_1.default.createElement(connected_link_1.ConnectedLink, { path: "/overview/initial/beats" },
                    react_1.default.createElement(eui_2.EuiButton, { color: "primary", fill: true }, "Enroll Beat")) },
                react_1.default.createElement("p", null, "Manage your configurations in a central location.")));
        }
        if (this.props.location.pathname.includes('/overview/initial')) {
            return (react_1.default.createElement(walkthrough_1.WalkthroughLayout, { title: "Get started with Beats central management", walkthroughSteps: walkthroughSteps, goTo: this.props.goTo, activePath: this.props.location.pathname },
                react_1.default.createElement(react_router_dom_1.Switch, null, walkthroughSteps.map(step => (react_1.default.createElement(react_router_dom_1.Route, { path: step.id, render: (props) => (react_1.default.createElement(step.page, Object.assign({}, this.props, props, { libs: this.props.libs, loadBeats: this.loadBeats }))) }))))));
        }
        const renderedTabs = tabs.map((tab, index) => (react_1.default.createElement(eui_1.EuiTab, { onClick: () => this.onSelectedTabChanged(tab.id), isSelected: tab.id === this.props.location.pathname, disabled: tab.disabled, key: index }, tab.name)));
        return (react_1.default.createElement(primary_1.PrimaryLayout, { title: "Beats", actionSection: react_1.default.createElement(react_router_dom_1.Switch, null,
                react_1.default.createElement(react_router_dom_1.Route, { path: "/overview/beats/:action?/:enrollmentToken?", render: (props) => (react_1.default.createElement(beats_1.BeatsPage.ActionArea, Object.assign({}, this.props, props, { libs: this.props.libs }))) }),
                react_1.default.createElement(react_router_dom_1.Route, { path: "/overview/tags", render: (props) => (react_1.default.createElement(tags_1.TagsPage.ActionArea, Object.assign({}, this.props, props, { libs: this.props.libs }))) })) },
            react_1.default.createElement(eui_1.EuiTabs, null, renderedTabs),
            react_1.default.createElement(route_with_breadcrumb_1.RouteWithBreadcrumb, { title: "Beats List", path: "/overview/beats/:action?/:enrollmentToken?", render: (props) => (react_1.default.createElement(beats_1.BeatsPage, Object.assign({}, this.props, { libs: this.props.libs }, props, { loadBeats: this.loadBeats, beats: this.state.beats }))) }),
            react_1.default.createElement(route_with_breadcrumb_1.RouteWithBreadcrumb, { title: "Activity Overview", path: "/overview/activity", exact: true, render: (props) => (react_1.default.createElement(activity_1.ActivityPage, Object.assign({}, this.props, { libs: this.props.libs }, props))) }),
            react_1.default.createElement(route_with_breadcrumb_1.RouteWithBreadcrumb, { title: "Tags List", path: "/overview/tags", exact: true, render: (props) => react_1.default.createElement(tags_1.TagsPage, Object.assign({}, this.props, { libs: this.props.libs }, props)) })));
    }
}
exports.MainPages = with_url_state_1.withUrlState(MainPagesComponent);
