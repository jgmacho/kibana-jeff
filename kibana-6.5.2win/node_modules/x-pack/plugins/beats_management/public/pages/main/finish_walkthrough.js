"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License;
 * you may not use this file except in compliance with the Elastic License.
 */
const eui_1 = require("@elastic/eui");
const react_1 = tslib_1.__importDefault(require("react"));
const with_url_state_1 = require("../../containers/with_url_state");
class FinishWalkthrough extends react_1.default.Component {
    constructor(props) {
        super(props);
        this.createBeatTagAssignments = (beats, tag) => beats.map(({ id }) => ({ beatId: id, tag: tag.id }));
        this.assignTagToBeat = async () => {
            if (!this.props.urlState.enrollmentToken) {
                return alert('Invalid URL, no enrollmentToken found');
            }
            if (!this.props.urlState.createdTag) {
                return alert('Invalid URL, no createdTag found');
            }
            const beat = await this.props.libs.beats.getBeatWithToken(this.props.urlState.enrollmentToken);
            if (!beat) {
                return alert('Error: Beat not enrolled properly');
            }
            const tags = await this.props.libs.tags.getTagsWithIds([this.props.urlState.createdTag]);
            const assignments = this.createBeatTagAssignments([beat], tags[0]);
            await this.props.libs.beats.assignTagsToBeats(assignments);
            this.props.setUrlState({
                createdTag: '',
                enrollmentToken: '',
            });
            return true;
        };
        this.state = {
            assigned: false,
        };
    }
    componentDidMount() {
        setTimeout(async () => {
            await this.props.loadBeats();
            const done = await this.assignTagToBeat();
            if (done) {
                this.setState({
                    assigned: true,
                });
            }
        }, 300);
    }
    render() {
        const { goTo } = this.props;
        return (react_1.default.createElement(eui_1.EuiFlexGroup, { justifyContent: "spaceAround", style: { marginTop: 50 } },
            react_1.default.createElement(eui_1.EuiFlexItem, { grow: false },
                react_1.default.createElement(eui_1.EuiPageContent, null,
                    react_1.default.createElement(eui_1.EuiEmptyPrompt, { iconType: "logoBeats", title: react_1.default.createElement("h2", null, "Your Beat is enrolled. What's next?"), body: react_1.default.createElement(react_1.default.Fragment, null,
                            react_1.default.createElement("p", null, "Start your Beat to check for configuration errors, then click Done.")), actions: react_1.default.createElement(eui_1.EuiButton, { fill: true, disabled: !this.state.assigned, onClick: async () => {
                                goTo('/overview/beats');
                            } }, "Done") })))));
    }
}
exports.FinishWalkthrough = FinishWalkthrough;
exports.FinishWalkthroughPage = with_url_state_1.withUrlState(FinishWalkthrough);
