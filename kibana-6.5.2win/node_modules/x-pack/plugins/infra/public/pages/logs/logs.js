"use strict";
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License;
 * you may not use this file except in compliance with the Elastic License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const react_1 = tslib_1.__importDefault(require("react"));
const page_content_1 = require("./page_content");
const toolbar_1 = require("./toolbar");
const empty_page_1 = require("../../components/empty_page");
const header_1 = require("../../components/header");
const page_1 = require("../../components/page");
const beta_badge_header_section_1 = require("../../components/beta_badge_header_section");
const with_log_filter_1 = require("../../containers/logs/with_log_filter");
const with_log_minimap_1 = require("../../containers/logs/with_log_minimap");
const with_log_position_1 = require("../../containers/logs/with_log_position");
const with_log_textview_1 = require("../../containers/logs/with_log_textview");
const with_kibana_chrome_1 = require("../../containers/with_kibana_chrome");
const with_source_1 = require("../../containers/with_source");
class LogsPage extends react_1.default.Component {
    render() {
        return (react_1.default.createElement(page_1.ColumnarPage, null,
            react_1.default.createElement(with_source_1.WithSource, null, ({ logIndicesExist }) => logIndicesExist || logIndicesExist === null ? (react_1.default.createElement(react_1.default.Fragment, null,
                react_1.default.createElement(with_log_filter_1.WithLogFilterUrlState, null),
                react_1.default.createElement(with_log_position_1.WithLogPositionUrlState, null),
                react_1.default.createElement(with_log_minimap_1.WithLogMinimapUrlState, null),
                react_1.default.createElement(with_log_textview_1.WithLogTextviewUrlState, null),
                react_1.default.createElement(header_1.Header, { appendSections: react_1.default.createElement(beta_badge_header_section_1.LogsBetaBadgeHeaderSection, null), breadcrumbs: [{ text: 'Logs' }] }),
                react_1.default.createElement(toolbar_1.LogsToolbar, null),
                react_1.default.createElement(page_content_1.LogsPageContent, null))) : (react_1.default.createElement(with_kibana_chrome_1.WithKibanaChrome, null, ({ basePath }) => (react_1.default.createElement(empty_page_1.EmptyPage, { title: "Looks like you don't have any logging indices.", message: "Let's add some!", actionLabel: "Setup Instructions", actionUrl: `${basePath}/app/kibana#/home/tutorial_directory/logging` })))))));
    }
}
exports.LogsPage = LogsPage;
